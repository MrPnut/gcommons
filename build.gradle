apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'about'
apply plugin: 'duplicates'
apply from:   'file:groovydoc.gradle'


ext.codenarcRuleSetFiles = [ 'codenarc.groovy' ]
apply from: 'https://raw.github.com/evgeny-goldin/gradle-plugins/master/codenarc/CodeNarc.gradle'
apply from: 'https://raw.github.com/evgeny-goldin/scripts/master/src/main/gradle/wrapper.gradle'

defaultTasks 'duplicates', 'clean', 'codenarc', 'build', 'install'


sourceCompatibility          = 1.6
group                        = 'com.github.goldin'

final groovyVersion          = '2.1.0'          // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.codehaus.groovy%22%20AND%20a%3A%22groovy%22
final spockVersion           = '0.7-groovy-2.0' // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.spockframework%22%20AND%20a%3A%22spock-core%22
final spockExtensionsVersion = '0.1.4'          // http://evgenyg.artifactoryonline.com/evgenyg/repo/com/github/goldin/spock-extensions/
final gcontractsVersion      = '1.2.10'         // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.gcontracts%22%20AND%20a%3A%22gcontracts-core%22
final antVersion             = '1.8.4'          // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.apache.ant%22%20AND%20a%3A%22ant%22
final springVersion          = '3.2.0.RELEASE'  // http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.springframework%22%20AND%20a%3A%22spring-core%22
final truezipVersion         = '6.8.4'          // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22de.schlichtherle%22%20AND%20a%3A%22truezip%22
final slf4jVersion           = '1.7.2'          // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.slf4j%22%20AND%20a%3A%22slf4j-api%22
final junitVersion           = '4.11'           // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22junit%22%20AND%20a%3A%22junit%22
final guiceVersion           = '3.0'            // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.google.inject%22%20AND%20a%3A%22guice%22


buildscript {
    repositories { maven { url 'http://evgenyg.artifactoryonline.com/evgenyg/repo/' }}
    dependencies { classpath   'com.github.goldin.plugins.gradle:about:0.2',
                               'com.github.goldin.plugins.gradle:duplicates:0.2' }
}

final extraJars = ( ! project.hasProperty( 'nj' /* no jars */ ))

repositories { maven { url 'http://evgenyg.artifactoryonline.com/evgenyg/repo/' }}
about        { includeDependencies = [ 'compile', 'runtime' ] }
duplicates   { configurations      = [ 'runtime' ]
               verbose             = true }

configurations {
    testArchives
}

dependencies {
    compile     "org.codehaus.groovy:groovy-all:$groovyVersion",
                "org.gcontracts:gcontracts-core:$gcontractsVersion",
                "de.schlichtherle:truezip:$truezipVersion",
                "org.slf4j:slf4j-api:$slf4jVersion",
                "com.google.guava:guava:14.0-rc1",
                'org.apache.commons:commons-exec:1.1',
                'commons-net:commons-net:3.2'

    testArchives 'viral.protein:faa:1@gz',
                 'apache-maven:apache-maven:3.0.1@zip',
                 'gradle:gradle:0.9@zip',
                 'org.codehaus.plexus:plexus-component-annotations:1.5.5'


    compile ( "com.google.inject:guice:$guiceVersion" ) {
        exclude group: 'asm' // Brought by gcontracts
    }

    compile ( "org.apache.ant:ant:$antVersion" ) {
        exclude group: 'org.apache.ant'
    }

    compile ( "org.springframework:spring-core:$springVersion" ) {
        exclude group: 'org.springframework'
        exclude group: 'commons-logging'
    }

    runtime     "org.apache.ant:ant-commons-net:$antVersion"

    testCompile "junit:junit:$junitVersion"

    testCompile ( "com.github.goldin:spock-extensions:$spockExtensionsVersion" ){
       exclude group: 'org.codehaus.groovy'
       exclude group: 'org.spockframework'
    }

    testCompile ( "org.spockframework:spock-core:$spockVersion" ) {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'junit'
    }

    // http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22ch.qos.logback%22%20AND%20a%3A%22logback-classic%22
    testRuntime 'ch.qos.logback:logback-classic:1.0.9'
}


clean { delete( "$rootDir/out" ) }


idea.project {
    jdkName = '1.7'
    ipr.withXml { provider -> provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git' }
}

idea.module {
    downloadSources = true
    downloadJavadoc = false
    excludeDirs += file( 'out' )
}

task downloadTestArchives( type: Copy ) {
    from configurations.testArchives
    into file( "$buildDir/testArchives" )
}


test {
    dependsOn downloadTestArchives
    systemProperties = ( 'true' == System.properties.slowTests ) ? [ slowTests : 'true' ] : [:]
    debug            = System.properties.containsKey( 'debug' )
    ignoreFailures   = true
}

jar.dependsOn 'about'

task sourcesJar( type: Jar, dependsOn: classes ) {
    onlyIf { extraJars }
    dependsOn 'about'
    classifier = 'sources'
    from sourceSets.main.allSource
}

task groovydocJar( type: Jar, dependsOn: groovydoc ) {
    onlyIf { extraJars }
    dependsOn 'about'
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

if ( extraJars )
{
    artifacts {
         archives sourcesJar
         archives groovydocJar
    }
}

